//1.Path Sum
  class Solution {
    public boolean hasPathSum(TreeNode root, int targetSum) {
         if(root==null)
            return false;
        if(root.left==null && root.right==null)
            return (targetSum-root.val)==0;
     return hasPathSum(root.left,targetSum-root.val) || hasPathSum(root.right,targetSum-root.val);   
    }
}

//2.Diameter of Binary Tree
  class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        int[] diameter=new int[1];
        height(root,diameter);
        return diameter[0];
    }
    int height(TreeNode root, int[] diameter) {
        if (root==null){
            return 0;
        }
        int left=height(root.left,diameter);
        int right=height(root.right,diameter);
        diameter[0]= Math.max(diameter[0],left+right);
        return Math.max(left,right)+1;
        
    }
}
